%FLURTOPHASE convert fluorescence image to phase images for schneitz cells
%   2018-01-11

%% specify all the paths and initialize schnitzcells
exp_date = '2018-01-11'
p = initschnitz('TestSchnitz-01',exp_date,'e.coli',...
'rootDir','D:\Dropbox (MIT)\Postdoc\programs\Schnitzcells\samples');
source_dir = 'D:\Dropbox (MIT)\Postdoc\microscope\nikon 1211 plasmid different copy number\871+963 induced 3hours 2000ms\';
save_dir = ['D:\Dropbox (MIT)\Postdoc\programs\Schnitzcells\samples\' exp_date '\TestSchnitz-01\images\'];

filename{1} = 'MultichannelF-t1.tif';
filename{2} = 'MultichannelF-t2.tif';
filename{3} = 'MultichannelF3.tif';
filename{4} = 'MultichannelF4.tif';
filename{5} = 'MultichannelF5.tif';
filename{6} = 'MultichannelF.tif';

%% process all the images for cell segmentation


for i = 1:1
    imgr = imread([source_dir filename{i}]);
    %2100 is a good threshold
    %p2(p2>2100)  = 2100;
    
    %get the region for cells
    mthres = 1100;
    pm = double(imgr);
    pm = delBack(pm, mthres,0);

    %prefix -01-t- indicates that we used these files for segmentation
    %based on fluorescence images
    write_name = ['D:\Dropbox (MIT)\Postdoc\programs\Schnitzcells\samples\'...
         exp_date '\TestSchnitz-01\images\TestSchnitz-01-t-' num2str(i,'%03d') '.tif'];
    imwrite(uint16(pm),write_name);
end

%p = segmoviefluor(p);

%% remove background from samples and identify spots
%   pm: gray-scale image
%   mthres: threshold to identify cells, thres1 in the first round and tre in
%   the following rounds 
function pm = delBack(pm, mthres, iter)
    m_br = double(pm>mthres);
    CC=bwconncomp(m_br);
    stats=regionprops(CC,'basic');
    for j = 1:CC.NumObjects
        larea(j) = stats(j).Area;
        if larea(j) > 100 && larea(j) < 4000000
            pm(CC.PixelIdxList{j}) = pm(CC.PixelIdxList{j})-prctile(pm(CC.PixelIdxList{j}),60);
            if iter < 2
                cella = zeros(size(pm));
                cella(CC.PixelIdxList{j}) = pm(CC.PixelIdxList{j});
                cella = delBack(cella, 300, iter+1);
                pm(CC.PixelIdxList{j}) = cella(CC.PixelIdxList{j});
            end        
        end
    end
end


